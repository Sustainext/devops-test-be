# Generated by Django 4.2.4 on 2025-02-11 10:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('materiality_dashboard', '0003_alter_materialtopic_esg_category'),
        ('supplier_assessment', '0004_alter_historicalstakeholder_email_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.JSONField(help_text='The custom question content (e.g. text, options, etc.)')),
                ('question_type', models.CharField(choices=[('text_short', 'Short Text'), ('text_long', 'Long Text'), ('yes_no', 'Yes/No'), ('multiple_choice', 'Multiple Choice'), ('fill_blank', 'Fill in the Blank'), ('multi_fill_blank', 'Multiple Fill in Blanks')], max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_questions', to=settings.AUTH_USER_MODEL)),
                ('disclosure', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='custom_questions', to='materiality_dashboard.disclosure')),
                ('material_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_questions', to='materiality_dashboard.materialtopic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalCustomQuestion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('question', models.JSONField(help_text='The custom question content (e.g. text, options, etc.)')),
                ('question_type', models.CharField(choices=[('text_short', 'Short Text'), ('text_long', 'Long Text'), ('yes_no', 'Yes/No'), ('multiple_choice', 'Multiple Choice'), ('fill_blank', 'Fill in the Blank'), ('multi_fill_blank', 'Multiple Fill in Blanks')], max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('created_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('disclosure', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='materiality_dashboard.disclosure')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('material_topic', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='materiality_dashboard.materialtopic')),
            ],
            options={
                'verbose_name': 'historical custom question',
                'verbose_name_plural': 'historical custom questions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPredefinedQuestion',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('question', models.JSONField(help_text='The question content (e.g. text, options, etc.)')),
                ('question_type', models.CharField(choices=[('text_short', 'Short Text'), ('text_long', 'Long Text'), ('yes_no', 'Yes/No'), ('multiple_choice', 'Multiple Choice'), ('fill_blank', 'Fill in the Blank'), ('multi_fill_blank', 'Multiple Fill in Blanks')], max_length=20)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('disclosure', models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='materiality_dashboard.disclosure')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('material_topic', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='materiality_dashboard.materialtopic')),
            ],
            options={
                'verbose_name': 'historical predefined question',
                'verbose_name_plural': 'historical predefined questions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalQuestionFile',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('object_id', models.PositiveIntegerField()),
                ('file', models.TextField(max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('content_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='contenttypes.contenttype')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical question file',
                'verbose_name_plural': 'historical question files',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='PredefinedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.JSONField(help_text='The question content (e.g. text, options, etc.)')),
                ('question_type', models.CharField(choices=[('text_short', 'Short Text'), ('text_long', 'Long Text'), ('yes_no', 'Yes/No'), ('multiple_choice', 'Multiple Choice'), ('fill_blank', 'Fill in the Blank'), ('multi_fill_blank', 'Multiple Fill in Blanks')], max_length=20)),
                ('disclosure', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='predefined_questions', to='materiality_dashboard.disclosure')),
                ('material_topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predefined_questions', to='materiality_dashboard.materialtopic')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='QuestionFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('object_id', models.PositiveIntegerField()),
                ('file', models.FileField(upload_to='question_files/')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='historicalfilequestion',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalfilequestion',
            name='question',
        ),
        migrations.RemoveField(
            model_name='historicalquestion',
            name='disclosure',
        ),
        migrations.RemoveField(
            model_name='historicalquestion',
            name='form',
        ),
        migrations.RemoveField(
            model_name='historicalquestion',
            name='history_user',
        ),
        migrations.RemoveField(
            model_name='historicalquestion',
            name='material_topic',
        ),
        migrations.RemoveField(
            model_name='question',
            name='disclosure',
        ),
        migrations.RemoveField(
            model_name='question',
            name='form',
        ),
        migrations.RemoveField(
            model_name='question',
            name='material_topic',
        ),
        migrations.RemoveField(
            model_name='answer',
            name='answer_type',
        ),
        migrations.RemoveField(
            model_name='answer',
            name='question',
        ),
        migrations.RemoveField(
            model_name='historicalanswer',
            name='answer_type',
        ),
        migrations.RemoveField(
            model_name='historicalanswer',
            name='question',
        ),
        migrations.AddField(
            model_name='answer',
            name='assessment_submission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='supplier_assessment.assessmentsubmission'),
        ),
        migrations.AddField(
            model_name='historicalanswer',
            name='assessment_submission',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier_assessment.assessmentsubmission'),
        ),
        migrations.AlterField(
            model_name='answer',
            name='answer',
            field=models.JSONField(help_text='The answer content (e.g. text, selected option, etc.)'),
        ),
        migrations.AlterField(
            model_name='assessmentsubmission',
            name='assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='supplier_assessment.assessment'),
        ),
        migrations.AlterField(
            model_name='historicalanswer',
            name='answer',
            field=models.JSONField(help_text='The answer content (e.g. text, selected option, etc.)'),
        ),
        migrations.DeleteModel(
            name='FileQuestion',
        ),
        migrations.DeleteModel(
            name='HistoricalFileQuestion',
        ),
        migrations.DeleteModel(
            name='HistoricalQuestion',
        ),
        migrations.DeleteModel(
            name='Question',
        ),
        migrations.AddField(
            model_name='answer',
            name='custom_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='supplier_assessment.customquestion'),
        ),
        migrations.AddField(
            model_name='answer',
            name='predefined_question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='supplier_assessment.predefinedquestion'),
        ),
        migrations.AddField(
            model_name='form',
            name='custom_questions',
            field=models.ManyToManyField(blank=True, related_name='forms', to='supplier_assessment.customquestion'),
        ),
        migrations.AddField(
            model_name='form',
            name='predefined_questions',
            field=models.ManyToManyField(blank=True, related_name='forms', to='supplier_assessment.predefinedquestion'),
        ),
        migrations.AddField(
            model_name='historicalanswer',
            name='custom_question',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier_assessment.customquestion'),
        ),
        migrations.AddField(
            model_name='historicalanswer',
            name='predefined_question',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='supplier_assessment.predefinedquestion'),
        ),
    ]
