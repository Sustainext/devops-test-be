# Generated by Django 4.2.4 on 2025-06-11 16:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tcfd_framework', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CoreElements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the core element.', max_length=255, unique=True)),
                ('description', models.TextField(help_text='Description of the core element.')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RecommendedDisclosures',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(help_text='Description of the recommended disclosure.')),
                ('order', models.PositiveIntegerField(help_text='Order of the recommended disclosure in the list.')),
                ('screen_tag', models.CharField(blank=True, max_length=5, null=True)),
                ('core_element', models.ForeignKey(help_text='Core element to which this disclosure belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='disclosures', to='tcfd_framework.coreelements')),
            ],
            options={
                'verbose_name_plural': 'Recommended Disclosures',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalRecommendedDisclosures',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(help_text='Description of the recommended disclosure.')),
                ('order', models.PositiveIntegerField(help_text='Order of the recommended disclosure in the list.')),
                ('screen_tag', models.CharField(blank=True, max_length=5, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('core_element', models.ForeignKey(blank=True, db_constraint=False, help_text='Core element to which this disclosure belongs.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tcfd_framework.coreelements')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical recommended disclosures',
                'verbose_name_plural': 'historical Recommended Disclosures',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataCollectionScreen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(db_index=True, help_text='Name of the data collection screen.', max_length=255)),
                ('order', models.PositiveIntegerField(help_text='Order of the data collection screen in the list.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('recommended_disclosure', models.ForeignKey(blank=True, db_constraint=False, help_text='Recommended disclosure to which this screen belongs.', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tcfd_framework.recommendeddisclosures')),
            ],
            options={
                'verbose_name': 'historical data collection screen',
                'verbose_name_plural': 'historical Data Collection Screens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCoreElements',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(db_index=True, help_text='Name of the core element.', max_length=255)),
                ('description', models.TextField(help_text='Description of the core element.')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical core elements',
                'verbose_name_plural': 'historical core elementss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DataCollectionScreen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Name of the data collection screen.', max_length=255, unique=True)),
                ('order', models.PositiveIntegerField(help_text='Order of the data collection screen in the list.')),
                ('recommended_disclosure', models.ForeignKey(help_text='Recommended disclosure to which this screen belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='data_collection_screens', to='tcfd_framework.recommendeddisclosures')),
            ],
            options={
                'verbose_name_plural': 'Data Collection Screens',
                'ordering': ['order'],
            },
        ),
    ]
