# Generated by Django 4.2.4 on 2024-10-15 05:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('sustainapp', '0009_alter_trackdashboard_report_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('esg_report', '0034_screentwelve_historicalscreentwelve'),
    ]

    operations = [
        migrations.CreateModel(
            name='ScreenThirteen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_policies_statement', models.TextField(blank=True, help_text="Statement about company's employees and their policies", null=True, verbose_name='Employee Policies Statement')),
                ('workforce_hire_retention_statement', models.TextField(blank=True, help_text="Statement about company's workforce hire and retention strategies", null=True, verbose_name='Workforce Hire and Retention Statement')),
                ('standard_wage', models.TextField(blank=True, help_text="Information about the company's standard wage policies", null=True, verbose_name='Standard Wage')),
                ('performance_review_process', models.TextField(blank=True, help_text="Statement about company's process for performance review of employees", null=True, verbose_name='Performance Review Process')),
                ('forced_labor_position', models.TextField(blank=True, help_text="Statement about company's position on forced or compulsory labor", null=True, verbose_name='Position on Forced/Compulsory Labor')),
                ('child_labor_position', models.TextField(blank=True, help_text="Statement about company's position on child labor", null=True, verbose_name='Position on Child Labor')),
                ('employee_diversity_position', models.TextField(blank=True, help_text="Statement about company's position on diversity of employees", null=True, verbose_name='Position on Employee Diversity')),
                ('employee_skill_upgrade_programs', models.TextField(blank=True, help_text="Statement about company's programs for upgrading employee's skills", null=True, verbose_name='Employee Skill Upgrade Programs')),
                ('remuneration_practices', models.TextField(blank=True, help_text="Statement about company's remuneration practices and policies", null=True, verbose_name='Remuneration Practices and Policies')),
                ('ohs_policies', models.TextField(blank=True, help_text="Statement about company's Occupational Health and Safety (OHS) policies", null=True, verbose_name='Occupational Health and Safety Policies')),
                ('hazard_risk_assessment', models.TextField(blank=True, help_text="Statement about company's process of Hazard and risk assessment", null=True, verbose_name='Hazard and Risk Assessment Process')),
                ('work_related_health_injuries', models.TextField(blank=True, help_text='Statement about work-related ill health and injuries in the company', null=True, verbose_name='Work-Related Ill Health and Injuries')),
                ('safety_training', models.TextField(blank=True, help_text="Statement about the company's safety training programs for employees", null=True, verbose_name='Safety Training')),
                ('ohs_management_system', models.TextField(blank=True, help_text="Statement about the company's Occupational Health and Safety (OHS) management system", null=True, verbose_name='OHS Management System')),
                ('freedom_of_association_views', models.TextField(blank=True, help_text="Statement about the company's views on freedom of association and collective bargaining", null=True, verbose_name='Views on Freedom of Association and Collective Bargaining')),
                ('violation_discrimination_policy', models.TextField(blank=True, help_text="Statement about the company's policy for addressing violation or discrimination", null=True, verbose_name='Policy on Addressing Violation/Discrimination')),
                ('indigenous_rights_policy', models.TextField(blank=True, help_text="Statement about the company's policy on violation of the rights of indigenous people", null=True, verbose_name="Policy on Violation of Indigenous People's Rights")),
                ('dynamic_question_answer', models.TextField(blank=True, help_text='This field stores the answer to a dynamic question provided as input', null=True, verbose_name='Dynamic Question Answer')),
                ('report', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='screen_thirteen', to='sustainapp.report')),
            ],
            options={
                'db_table': 'screen_thirteen',
            },
        ),
        migrations.CreateModel(
            name='HistoricalScreenThirteen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('employee_policies_statement', models.TextField(blank=True, help_text="Statement about company's employees and their policies", null=True, verbose_name='Employee Policies Statement')),
                ('workforce_hire_retention_statement', models.TextField(blank=True, help_text="Statement about company's workforce hire and retention strategies", null=True, verbose_name='Workforce Hire and Retention Statement')),
                ('standard_wage', models.TextField(blank=True, help_text="Information about the company's standard wage policies", null=True, verbose_name='Standard Wage')),
                ('performance_review_process', models.TextField(blank=True, help_text="Statement about company's process for performance review of employees", null=True, verbose_name='Performance Review Process')),
                ('forced_labor_position', models.TextField(blank=True, help_text="Statement about company's position on forced or compulsory labor", null=True, verbose_name='Position on Forced/Compulsory Labor')),
                ('child_labor_position', models.TextField(blank=True, help_text="Statement about company's position on child labor", null=True, verbose_name='Position on Child Labor')),
                ('employee_diversity_position', models.TextField(blank=True, help_text="Statement about company's position on diversity of employees", null=True, verbose_name='Position on Employee Diversity')),
                ('employee_skill_upgrade_programs', models.TextField(blank=True, help_text="Statement about company's programs for upgrading employee's skills", null=True, verbose_name='Employee Skill Upgrade Programs')),
                ('remuneration_practices', models.TextField(blank=True, help_text="Statement about company's remuneration practices and policies", null=True, verbose_name='Remuneration Practices and Policies')),
                ('ohs_policies', models.TextField(blank=True, help_text="Statement about company's Occupational Health and Safety (OHS) policies", null=True, verbose_name='Occupational Health and Safety Policies')),
                ('hazard_risk_assessment', models.TextField(blank=True, help_text="Statement about company's process of Hazard and risk assessment", null=True, verbose_name='Hazard and Risk Assessment Process')),
                ('work_related_health_injuries', models.TextField(blank=True, help_text='Statement about work-related ill health and injuries in the company', null=True, verbose_name='Work-Related Ill Health and Injuries')),
                ('safety_training', models.TextField(blank=True, help_text="Statement about the company's safety training programs for employees", null=True, verbose_name='Safety Training')),
                ('ohs_management_system', models.TextField(blank=True, help_text="Statement about the company's Occupational Health and Safety (OHS) management system", null=True, verbose_name='OHS Management System')),
                ('freedom_of_association_views', models.TextField(blank=True, help_text="Statement about the company's views on freedom of association and collective bargaining", null=True, verbose_name='Views on Freedom of Association and Collective Bargaining')),
                ('violation_discrimination_policy', models.TextField(blank=True, help_text="Statement about the company's policy for addressing violation or discrimination", null=True, verbose_name='Policy on Addressing Violation/Discrimination')),
                ('indigenous_rights_policy', models.TextField(blank=True, help_text="Statement about the company's policy on violation of the rights of indigenous people", null=True, verbose_name="Policy on Violation of Indigenous People's Rights")),
                ('dynamic_question_answer', models.TextField(blank=True, help_text='This field stores the answer to a dynamic question provided as input', null=True, verbose_name='Dynamic Question Answer')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sustainapp.report')),
            ],
            options={
                'verbose_name': 'historical screen thirteen',
                'verbose_name_plural': 'historical screen thirteens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
