# Generated by Django 5.1.1 on 2024-10-24 06:14

import simple_history.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AboutTheCompanyAndOperations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('about_the_company', models.TextField(blank=True, null=True)),
                ('business_relations', models.TextField(blank=True, null=True)),
                ('entities_included', models.TextField(blank=True, null=True)),
                ('supply_chain_description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AboutTheReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('framework_description', models.TextField(blank=True, null=True)),
                ('external_assurance', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'About The Report',
                'verbose_name_plural': 'About The Report',
            },
        ),
        migrations.CreateModel(
            name='AwardAndRecognition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CeoMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('message_image', models.TextField(blank=True, null=True)),
                ('signature_image', models.TextField(blank=True, null=True)),
                ('ceo_name', models.TextField(blank=True, null=True)),
                ('signature_image_name', models.TextField(blank=True, null=True)),
                ('message_image_name', models.TextField(blank=True, null=True)),
                ('company_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ESGReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalAboutTheCompanyAndOperations',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('about_the_company', models.TextField(blank=True, null=True)),
                ('business_relations', models.TextField(blank=True, null=True)),
                ('entities_included', models.TextField(blank=True, null=True)),
                ('supply_chain_description', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical about the company and operations',
                'verbose_name_plural': 'historical about the company and operationss',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAboutTheReport',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('framework_description', models.TextField(blank=True, null=True)),
                ('external_assurance', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical About The Report',
                'verbose_name_plural': 'historical About The Report',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAwardAndRecognition',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical award and recognition',
                'verbose_name_plural': 'historical award and recognitions',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCeoMessage',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('message_image', models.TextField(blank=True, null=True)),
                ('signature_image', models.TextField(blank=True, null=True)),
                ('ceo_name', models.TextField(blank=True, null=True)),
                ('signature_image_name', models.TextField(blank=True, null=True)),
                ('message_image_name', models.TextField(blank=True, null=True)),
                ('company_name', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical ceo message',
                'verbose_name_plural': 'historical ceo messages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMaterialityStatement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('statement', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Materiality Statement',
                'verbose_name_plural': 'historical Materiality Statements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMissionVisionValues',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('mission', models.TextField(blank=True, null=True)),
                ('mission_image', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical mission vision values',
                'verbose_name_plural': 'historical mission vision valuess',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenEleven',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('company_economic_performance_statement', models.TextField(blank=True, null=True)),
                ('financial_assistance_from_government', models.TextField(blank=True, null=True)),
                ('introduction_to_economic_value_creation', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical screen eleven',
                'verbose_name_plural': 'historical screen elevens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenFifteenModel',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('commitment_statement', models.TextField(blank=True, help_text="Add a statement about the company's commitment to products and services.", null=True, verbose_name="Company's Commitment to Products and Services")),
                ('product_info_labelling', models.TextField(blank=True, help_text="Add a statement about the company's product and service information and labelling.", null=True, verbose_name='Product and Service Information and Labelling')),
                ('marketing_practices', models.TextField(blank=True, help_text="Add a statement about the company's marketing practices.", null=True, verbose_name="Company's Marketing Practices")),
                ('conclusion', models.TextField(blank=True, help_text='Add a conclusion to the report.', null=True, verbose_name='Conclusion')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical screen fifteen model',
                'verbose_name_plural': 'historical screen fifteen models',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenFourteen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('community_engagement', models.TextField(blank=True, help_text="Add a statement about the company's community engagement.", null=True, verbose_name='Community Engagement Statement')),
                ('impact_assessment', models.TextField(blank=True, help_text="Add a statement about the company's impact assessment.", null=True, verbose_name='Impact Assessment')),
                ('csr_policies', models.TextField(blank=True, help_text="Add a statement about the company's Corporate Social Responsibility policies.", null=True, verbose_name='Corporate Social Responsibility Policies')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Screen Fourteen',
                'verbose_name_plural': 'historical Screen Fourteen',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenNine',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('statement', models.TextField(blank=True, null=True)),
                ('board_gov_statement', models.TextField(blank=True, null=True)),
                ('remuneration_policies', models.TextField(blank=True, null=True)),
                ('policy_not_public_reason', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical screen nine',
                'verbose_name_plural': 'historical screen nines',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenTen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('company_sustainability_statement', models.TextField(blank=True, null=True)),
                ('approach_for_sustainability', models.TextField(blank=True, null=True)),
                ('sustainability_goals', models.TextField(blank=True, null=True)),
                ('approach_to_supply_chain_sustainability', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Screen Ten',
                'verbose_name_plural': 'historical Screen Ten',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenThirteen',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('employee_policies_statement', models.TextField(blank=True, help_text="Statement about company's employees and their policies", null=True, verbose_name='Employee Policies Statement')),
                ('workforce_hire_retention_statement', models.TextField(blank=True, help_text="Statement about company's workforce hire and retention strategies", null=True, verbose_name='Workforce Hire and Retention Statement')),
                ('standard_wage', models.TextField(blank=True, help_text="Information about the company's standard wage policies", null=True, verbose_name='Standard Wage')),
                ('performance_review_process', models.TextField(blank=True, help_text="Statement about company's process for performance review of employees", null=True, verbose_name='Performance Review Process')),
                ('forced_labor_position', models.TextField(blank=True, help_text="Statement about company's position on forced or compulsory labor", null=True, verbose_name='Position on Forced/Compulsory Labor')),
                ('child_labor_position', models.TextField(blank=True, help_text="Statement about company's position on child labor", null=True, verbose_name='Position on Child Labor')),
                ('employee_diversity_position', models.TextField(blank=True, help_text="Statement about company's position on diversity of employees", null=True, verbose_name='Position on Employee Diversity')),
                ('employee_skill_upgrade_programs', models.TextField(blank=True, help_text="Statement about company's programs for upgrading employee's skills", null=True, verbose_name='Employee Skill Upgrade Programs')),
                ('remuneration_practices', models.TextField(blank=True, help_text="Statement about company's remuneration practices and policies", null=True, verbose_name='Remuneration Practices and Policies')),
                ('ohs_policies', models.TextField(blank=True, help_text="Statement about company's Occupational Health and Safety (OHS) policies", null=True, verbose_name='Occupational Health and Safety Policies')),
                ('hazard_risk_assessment', models.TextField(blank=True, help_text="Statement about company's process of Hazard and risk assessment", null=True, verbose_name='Hazard and Risk Assessment Process')),
                ('work_related_health_injuries', models.TextField(blank=True, help_text='Statement about work-related ill health and injuries in the company', null=True, verbose_name='Work-Related Ill Health and Injuries')),
                ('safety_training', models.TextField(blank=True, help_text="Statement about the company's safety training programs for employees", null=True, verbose_name='Safety Training')),
                ('ohs_management_system', models.TextField(blank=True, help_text="Statement about the company's Occupational Health and Safety (OHS) management system", null=True, verbose_name='OHS Management System')),
                ('freedom_of_association_views', models.TextField(blank=True, help_text="Statement about the company's views on freedom of association and collective bargaining", null=True, verbose_name='Views on Freedom of Association and Collective Bargaining')),
                ('violation_discrimination_policy', models.TextField(blank=True, help_text="Statement about the company's policy for addressing violation or discrimination", null=True, verbose_name='Policy on Addressing Violation/Discrimination')),
                ('indigenous_rights_policy', models.TextField(blank=True, help_text="Statement about the company's policy on violation of the rights of indigenous people", null=True, verbose_name="Policy on Violation of Indigenous People's Rights")),
                ('parental_leaves', models.TextField(blank=True, help_text='This field stores the answer to a dynamic question provided as input', null=True, verbose_name='Dynamic Question Answer')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical screen thirteen',
                'verbose_name_plural': 'historical screen thirteens',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScreenTwelve',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('environmental_responsibility_statement', models.TextField(blank=True, help_text="Statement about company's responsibility to minimize the environmental impact", null=True)),
                ('emissions', models.TextField(blank=True, help_text="Description of the company's efforts to reduce emissions", null=True)),
                ('scope_one_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 1 emissions', null=True)),
                ('scope_two_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 2 emissions', null=True)),
                ('scope_three_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 3 emissions', null=True)),
                ('ghg_emission_intensity_tracking', models.TextField(blank=True, help_text='Statement about tracking of GHG emission intensity', null=True)),
                ('ghg_emission_reduction_efforts', models.TextField(blank=True, help_text='Statement about efforts to reduce GHG emissions', null=True)),
                ('ozone_depleting_substance_elimination', models.TextField(blank=True, help_text="Statement about company's commitment to eliminate use of ozone depleting substances", null=True)),
                ('material_management_strategy', models.TextField(blank=True, help_text="Statement about company's material management strategy", null=True)),
                ('recycling_process', models.TextField(blank=True, help_text="Statement about company's process for recycling", null=True)),
                ('reclamation_recycling_process', models.TextField(blank=True, help_text="Statement about company's reclamation and recycling process", null=True)),
                ('water_withdrawal_tracking', models.TextField(blank=True, help_text="Statement about company's tracking of water withdrawal", null=True)),
                ('water_consumption_goals', models.TextField(blank=True, help_text="Statement about company's water consumption goals", null=True)),
                ('energy_consumption_within_organization', models.TextField(blank=True, help_text="Statement about company's energy consumption within the organization", null=True)),
                ('energy_consumption_outside_organization', models.TextField(blank=True, help_text="Statement about company's energy consumption outside of the organization", null=True)),
                ('energy_intensity_tracking', models.TextField(blank=True, help_text='Statement about tracking the Energy Intensity', null=True)),
                ('energy_consumption_reduction_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to reduce energy consumption", null=True)),
                ('significant_spills', models.TextField(blank=True, help_text="Statement about company's significant spills", null=True)),
                ('habitat_protection_restoration_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to protect and restore habitats", null=True)),
                ('air_quality_protection_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to protect and maintain air quality", null=True)),
                ('biogenic_c02_emissions', models.TextField(blank=True, help_text="Statement about company's biogenic CO2 emissions", null=True)),
                ('biogenic_c02_emissions_305_3c', models.TextField(blank=True, help_text="Statement about company's biogenic CO2 emissions 305 3c", null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Screen Twelve',
                'verbose_name_plural': 'historical Screen Twelve',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStakeholderEngagement',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.JSONField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical stakeholder engagement',
                'verbose_name_plural': 'historical stakeholder engagements',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSustainabilityRoadmap',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical sustainability roadmap',
                'verbose_name_plural': 'historical sustainability roadmaps',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MaterialityStatement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('statement', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Materiality Statement',
                'verbose_name_plural': 'Materiality Statements',
            },
        ),
        migrations.CreateModel(
            name='MissionVisionValues',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('mission', models.TextField(blank=True, null=True)),
                ('mission_image', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenEleven',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_economic_performance_statement', models.TextField(blank=True, null=True)),
                ('financial_assistance_from_government', models.TextField(blank=True, null=True)),
                ('introduction_to_economic_value_creation', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenFifteenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('commitment_statement', models.TextField(blank=True, help_text="Add a statement about the company's commitment to products and services.", null=True, verbose_name="Company's Commitment to Products and Services")),
                ('product_info_labelling', models.TextField(blank=True, help_text="Add a statement about the company's product and service information and labelling.", null=True, verbose_name='Product and Service Information and Labelling')),
                ('marketing_practices', models.TextField(blank=True, help_text="Add a statement about the company's marketing practices.", null=True, verbose_name="Company's Marketing Practices")),
                ('conclusion', models.TextField(blank=True, help_text='Add a conclusion to the report.', null=True, verbose_name='Conclusion')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenFourteen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('community_engagement', models.TextField(blank=True, help_text="Add a statement about the company's community engagement.", null=True, verbose_name='Community Engagement Statement')),
                ('impact_assessment', models.TextField(blank=True, help_text="Add a statement about the company's impact assessment.", null=True, verbose_name='Impact Assessment')),
                ('csr_policies', models.TextField(blank=True, help_text="Add a statement about the company's Corporate Social Responsibility policies.", null=True, verbose_name='Corporate Social Responsibility Policies')),
            ],
            options={
                'verbose_name': 'Screen Fourteen',
                'verbose_name_plural': 'Screen Fourteen',
            },
        ),
        migrations.CreateModel(
            name='ScreenNine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('statement', models.TextField(blank=True, null=True)),
                ('board_gov_statement', models.TextField(blank=True, null=True)),
                ('remuneration_policies', models.TextField(blank=True, null=True)),
                ('policy_not_public_reason', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ScreenTen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_sustainability_statement', models.TextField(blank=True, null=True)),
                ('approach_for_sustainability', models.TextField(blank=True, null=True)),
                ('sustainability_goals', models.TextField(blank=True, null=True)),
                ('approach_to_supply_chain_sustainability', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Screen Ten',
                'verbose_name_plural': 'Screen Ten',
                'db_table': 'screen_ten',
            },
        ),
        migrations.CreateModel(
            name='ScreenThirteen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee_policies_statement', models.TextField(blank=True, help_text="Statement about company's employees and their policies", null=True, verbose_name='Employee Policies Statement')),
                ('workforce_hire_retention_statement', models.TextField(blank=True, help_text="Statement about company's workforce hire and retention strategies", null=True, verbose_name='Workforce Hire and Retention Statement')),
                ('standard_wage', models.TextField(blank=True, help_text="Information about the company's standard wage policies", null=True, verbose_name='Standard Wage')),
                ('performance_review_process', models.TextField(blank=True, help_text="Statement about company's process for performance review of employees", null=True, verbose_name='Performance Review Process')),
                ('forced_labor_position', models.TextField(blank=True, help_text="Statement about company's position on forced or compulsory labor", null=True, verbose_name='Position on Forced/Compulsory Labor')),
                ('child_labor_position', models.TextField(blank=True, help_text="Statement about company's position on child labor", null=True, verbose_name='Position on Child Labor')),
                ('employee_diversity_position', models.TextField(blank=True, help_text="Statement about company's position on diversity of employees", null=True, verbose_name='Position on Employee Diversity')),
                ('employee_skill_upgrade_programs', models.TextField(blank=True, help_text="Statement about company's programs for upgrading employee's skills", null=True, verbose_name='Employee Skill Upgrade Programs')),
                ('remuneration_practices', models.TextField(blank=True, help_text="Statement about company's remuneration practices and policies", null=True, verbose_name='Remuneration Practices and Policies')),
                ('ohs_policies', models.TextField(blank=True, help_text="Statement about company's Occupational Health and Safety (OHS) policies", null=True, verbose_name='Occupational Health and Safety Policies')),
                ('hazard_risk_assessment', models.TextField(blank=True, help_text="Statement about company's process of Hazard and risk assessment", null=True, verbose_name='Hazard and Risk Assessment Process')),
                ('work_related_health_injuries', models.TextField(blank=True, help_text='Statement about work-related ill health and injuries in the company', null=True, verbose_name='Work-Related Ill Health and Injuries')),
                ('safety_training', models.TextField(blank=True, help_text="Statement about the company's safety training programs for employees", null=True, verbose_name='Safety Training')),
                ('ohs_management_system', models.TextField(blank=True, help_text="Statement about the company's Occupational Health and Safety (OHS) management system", null=True, verbose_name='OHS Management System')),
                ('freedom_of_association_views', models.TextField(blank=True, help_text="Statement about the company's views on freedom of association and collective bargaining", null=True, verbose_name='Views on Freedom of Association and Collective Bargaining')),
                ('violation_discrimination_policy', models.TextField(blank=True, help_text="Statement about the company's policy for addressing violation or discrimination", null=True, verbose_name='Policy on Addressing Violation/Discrimination')),
                ('indigenous_rights_policy', models.TextField(blank=True, help_text="Statement about the company's policy on violation of the rights of indigenous people", null=True, verbose_name="Policy on Violation of Indigenous People's Rights")),
                ('parental_leaves', models.TextField(blank=True, help_text='This field stores the answer to a dynamic question provided as input', null=True, verbose_name='Dynamic Question Answer')),
            ],
            options={
                'db_table': 'screen_thirteen',
            },
        ),
        migrations.CreateModel(
            name='ScreenTwelve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('environmental_responsibility_statement', models.TextField(blank=True, help_text="Statement about company's responsibility to minimize the environmental impact", null=True)),
                ('emissions', models.TextField(blank=True, help_text="Description of the company's efforts to reduce emissions", null=True)),
                ('scope_one_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 1 emissions', null=True)),
                ('scope_two_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 2 emissions', null=True)),
                ('scope_three_emissions', models.TextField(blank=True, help_text='Add statement about company’s scope 3 emissions', null=True)),
                ('ghg_emission_intensity_tracking', models.TextField(blank=True, help_text='Statement about tracking of GHG emission intensity', null=True)),
                ('ghg_emission_reduction_efforts', models.TextField(blank=True, help_text='Statement about efforts to reduce GHG emissions', null=True)),
                ('ozone_depleting_substance_elimination', models.TextField(blank=True, help_text="Statement about company's commitment to eliminate use of ozone depleting substances", null=True)),
                ('material_management_strategy', models.TextField(blank=True, help_text="Statement about company's material management strategy", null=True)),
                ('recycling_process', models.TextField(blank=True, help_text="Statement about company's process for recycling", null=True)),
                ('reclamation_recycling_process', models.TextField(blank=True, help_text="Statement about company's reclamation and recycling process", null=True)),
                ('water_withdrawal_tracking', models.TextField(blank=True, help_text="Statement about company's tracking of water withdrawal", null=True)),
                ('water_consumption_goals', models.TextField(blank=True, help_text="Statement about company's water consumption goals", null=True)),
                ('energy_consumption_within_organization', models.TextField(blank=True, help_text="Statement about company's energy consumption within the organization", null=True)),
                ('energy_consumption_outside_organization', models.TextField(blank=True, help_text="Statement about company's energy consumption outside of the organization", null=True)),
                ('energy_intensity_tracking', models.TextField(blank=True, help_text='Statement about tracking the Energy Intensity', null=True)),
                ('energy_consumption_reduction_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to reduce energy consumption", null=True)),
                ('significant_spills', models.TextField(blank=True, help_text="Statement about company's significant spills", null=True)),
                ('habitat_protection_restoration_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to protect and restore habitats", null=True)),
                ('air_quality_protection_commitment', models.TextField(blank=True, help_text="Statement about company's commitment to protect and maintain air quality", null=True)),
                ('biogenic_c02_emissions', models.TextField(blank=True, help_text="Statement about company's biogenic CO2 emissions", null=True)),
                ('biogenic_c02_emissions_305_3c', models.TextField(blank=True, help_text="Statement about company's biogenic CO2 emissions 305 3c", null=True)),
            ],
            options={
                'verbose_name': 'Screen Twelve',
                'verbose_name_plural': 'Screen Twelve',
            },
        ),
        migrations.CreateModel(
            name='StakeholderEngagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SustainabilityRoadmap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('file', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
