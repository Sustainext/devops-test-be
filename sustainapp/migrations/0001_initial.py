# Generated by Django 5.1.1 on 2024-10-24 06:14

import authentication.models
import common.Validators.validate_future_date
import django.contrib.postgres.fields
import django.db.models.deletion
import django.db.models.manager
import sustainapp.Validators.IsPositiveInteger
import sustainapp.Validators.LocationValidators
import sustainapp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('authentication', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/certifcations')),
            ],
        ),
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/framework')),
            ],
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/rating')),
            ],
        ),
        migrations.CreateModel(
            name='Regulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/regulation')),
            ],
        ),
        migrations.CreateModel(
            name='Scope',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Sdg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/sdg')),
                ('Target_no', models.PositiveSmallIntegerField()),
                ('goal_no', models.PositiveSmallIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('contribution', models.CharField(blank=True, max_length=256, null=True)),
                ('total_emissions', models.CharField(blank=True, max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('Image', models.ImageField(blank=True, max_length=4098, null=True, upload_to='images/Target')),
            ],
        ),
        migrations.CreateModel(
            name='TrackDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('table_name', models.CharField(default='', max_length=255)),
                ('report_name', models.CharField(choices=[('emission', 'Emission'), ('energy', 'Energy'), ('waste', 'Waste'), ('employment', 'Employment'), ('ohs', 'Occupational Health and Safety (OHS)'), ('diversity_inclusion', 'Diversity & Inclusion'), ('community_development', 'Community Development'), ('water_and_effluents', 'Water & Effluents')], max_length=1024)),
                ('report_id', models.CharField(max_length=255)),
                ('group_id', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisData2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_id', models.CharField(max_length=255, unique=True)),
                ('data', models.JSONField(default=dict)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='AnalysisData2client', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='Bussinessrelationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partnerships', models.CharField(max_length=256)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Bussinessrelationship_client', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='Companyactivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('bussiness_relationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='companyactivityBussinessrelationship', to='sustainapp.bussinessrelationship')),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Companyactivitiesclient', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='Corporateentity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('corporatetype', models.CharField(blank=True, max_length=256, null=True)),
                ('ownershipnature', models.CharField(blank=True, max_length=256, null=True)),
                ('location_headquarters', models.CharField(blank=True, max_length=256, null=True)),
                ('phone', models.CharField(blank=True, max_length=256, null=True)),
                ('mobile', models.CharField(blank=True, max_length=256, null=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('fax', models.CharField(blank=True, max_length=256, null=True)),
                ('employeecount', models.CharField(blank=True, max_length=256, null=True)),
                ('revenue', models.CharField(blank=True, max_length=256, null=True)),
                ('sector', models.CharField(blank=True, max_length=256, null=True)),
                ('subindustry', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=1000, null=True)),
                ('Country', models.CharField(blank=True, max_length=256, null=True)),
                ('state', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=256, null=True)),
                ('date_format', models.CharField(blank=True, max_length=1000, null=True)),
                ('currency', models.CharField(blank=True, max_length=256, null=True)),
                ('timezone', models.CharField(blank=True, max_length=256, null=True)),
                ('language', models.CharField(blank=True, max_length=256, null=True)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('legalform', models.CharField(blank=True, max_length=256, null=True)),
                ('ownership', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('location_of_headquarters', models.CharField(blank=True, max_length=256, null=True)),
                ('amount', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_business_activities', models.CharField(blank=True, max_length=1000, null=True)),
                ('type_of_product', models.CharField(blank=True, max_length=1000, null=True)),
                ('type_of_services', models.CharField(blank=True, max_length=1000, null=True)),
                ('type_of_business_relationship', models.CharField(blank=True, max_length=1000, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='corporatenetityclient', to='authentication.client')),
                ('framework', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporatenetityframework', to='sustainapp.framework')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('phone', models.CharField(blank=True, max_length=256, null=True)),
                ('mobile', models.CharField(blank=True, max_length=256, null=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('fax', models.CharField(blank=True, max_length=256, null=True)),
                ('employeecount', models.CharField(blank=True, max_length=256, null=True)),
                ('revenue', models.CharField(blank=True, max_length=256, null=True)),
                ('sector', models.CharField(blank=True, max_length=256, null=True)),
                ('sub_industry', models.CharField(blank=True, max_length=256, null=True)),
                ('streetaddress', models.CharField(blank=True, max_length=256, null=True)),
                ('country', models.CharField(max_length=256)),
                ('state', models.CharField(max_length=256)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=256, null=True)),
                ('dateformat', models.CharField(blank=True, max_length=256, null=True)),
                ('currency', models.CharField(blank=True, max_length=256, null=True)),
                ('timezone', models.CharField(blank=True, max_length=256, null=True)),
                ('language', models.CharField(blank=True, max_length=256, null=True)),
                ('typelocation', models.CharField(blank=True, max_length=256, null=True)),
                ('location_type', models.CharField(blank=True, max_length=256, null=True)),
                ('area', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_business_activities', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_product', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_services', models.CharField(blank=True, max_length=256, null=True)),
                ('latitude', models.FloatField(blank=True, null=True, validators=[sustainapp.Validators.LocationValidators.validate_latitude])),
                ('longitude', models.FloatField(blank=True, null=True, validators=[sustainapp.Validators.LocationValidators.validate_longitude])),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='locationclient', to='authentication.client')),
                ('corporateentity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='sustainapp.corporateentity')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('1', 'main'), ('2', 'mobile'), ('3', 'fax')], max_length=256)),
                ('number', models.PositiveIntegerField()),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='sustainapp.location')),
            ],
        ),
        migrations.CreateModel(
            name='ClientTaskDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('task_name', models.CharField(max_length=1024)),
                ('deadline', models.DateField(help_text='Enter only future dates', validators=[common.Validators.validate_future_date.validate_future_date])),
                ('roles', models.IntegerField(blank=True, null=True)),
                ('task_status', models.CharField(choices=[('in_progress', 'in_progress'), ('approved', 'approved'), ('under_review', 'under_review'), ('completed', 'completed'), ('reject', 'reject')], default='in_progress', max_length=64)),
                ('category', models.CharField(blank=True, max_length=1024, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=1024, null=True)),
                ('scope', models.CharField(blank=True, max_length=1024, null=True)),
                ('month', models.CharField(blank=True, max_length=1024, null=True)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('activity_id', models.CharField(blank=True, max_length=2048, null=True)),
                ('value1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('value2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('unit1', models.CharField(blank=True, max_length=1024, null=True)),
                ('unit2', models.CharField(blank=True, max_length=1024, null=True)),
                ('unit_type', models.CharField(blank=True, max_length=1024, null=True)),
                ('file_data', models.JSONField(blank=True, null=True)),
                ('activity', models.CharField(blank=True, max_length=2048, null=True)),
                ('region', models.CharField(blank=True, max_length=1024, null=True)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subordinates_task', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task', to=settings.AUTH_USER_MODEL)),
                ('file_uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fileuploadedby', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sustainapp.location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Batch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(blank=True, max_length=56, null=True)),
                ('total_co2e', models.DecimalField(blank=True, decimal_places=50, max_digits=100, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='batchclient', to='authentication.client')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batch_location', to='sustainapp.location')),
            ],
            managers=[
                ('latest_fields', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Mygoal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1024)),
                ('deadline', models.DateField(help_text='Enter only future dates')),
                ('completed', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Mygoal_User', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Mygoalclient', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type_corporate_entity', models.CharField(blank=True, max_length=256, null=True)),
                ('owner', models.CharField(blank=True, max_length=256, null=True)),
                ('phone', models.CharField(blank=True, max_length=256, null=True)),
                ('mobile', models.CharField(blank=True, max_length=256, null=True)),
                ('website', models.CharField(blank=True, max_length=256, null=True)),
                ('fax', models.CharField(blank=True, max_length=256, null=True)),
                ('employeecount', models.CharField(blank=True, max_length=256, null=True)),
                ('sector', models.CharField(blank=True, max_length=256, null=True)),
                ('revenue', models.CharField(blank=True, max_length=256, null=True)),
                ('subindustry', models.CharField(blank=True, max_length=256, null=True)),
                ('address', models.CharField(blank=True, max_length=256, null=True)),
                ('countryoperation', models.CharField(blank=True, max_length=256, null=True)),
                ('state', models.CharField(blank=True, max_length=256, null=True)),
                ('city', models.CharField(blank=True, max_length=256, null=True)),
                ('date_format', models.CharField(blank=True, max_length=256, null=True)),
                ('currency', models.CharField(blank=True, max_length=256, null=True)),
                ('timezone', models.CharField(blank=True, max_length=256, null=True)),
                ('language', models.CharField(blank=True, max_length=256, null=True)),
                ('from_date', models.CharField(blank=True, max_length=256, null=True)),
                ('to_date', models.CharField(blank=True, max_length=256, null=True)),
                ('active', models.BooleanField(default=False)),
                ('no_of_employees', models.CharField(blank=True, max_length=256, null=True)),
                ('amount', models.CharField(blank=True, max_length=256, null=True)),
                ('ownership_and_legal_form', models.CharField(blank=True, max_length=256, null=True)),
                ('group', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_corporate_entity', models.CharField(blank=True, max_length=256, null=True)),
                ('location_of_headquarters', models.CharField(blank=True, max_length=256, null=True)),
                ('sub_industry', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_business_activities', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_product', models.CharField(blank=True, max_length=256, null=True)),
                ('type_of_services', models.CharField(blank=True, max_length=256, null=True)),
                ('certification', models.ManyToManyField(blank=True, related_name='organisationdetailcertification', to='sustainapp.certification')),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='client_Org', to='authentication.client')),
                ('framework', models.ManyToManyField(blank=True, related_name='organisationdetailframework', to='sustainapp.framework')),
                ('rating', models.ManyToManyField(blank=True, related_name='organisationdetailrating', to='sustainapp.rating')),
                ('regulation', models.ManyToManyField(blank=True, related_name='organisationdetailregulation', to='sustainapp.regulation')),
                ('sdg', models.ManyToManyField(blank=True, related_name='organisationdetailsdg', to='sustainapp.sdg')),
                ('target', models.ManyToManyField(blank=True, related_name='organisationdetailtarget', to='sustainapp.target')),
            ],
        ),
        migrations.AddField(
            model_name='corporateentity',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='corporatenetityorg', to='sustainapp.organization'),
        ),
        migrations.AddField(
            model_name='bussinessrelationship',
            name='organization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_Bussinessrelationship', to='sustainapp.organization'),
        ),
        migrations.CreateModel(
            name='Bussinessactivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_name', models.CharField(max_length=256)),
                ('service', models.CharField(max_length=256)),
                ('Products', models.CharField(max_length=256)),
                ('markets', models.CharField(max_length=256)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Bussinessactivityclient', to='authentication.client')),
                ('bussinessrelationship', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bussinessactivity', to='sustainapp.bussinessrelationship')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organization_bussiness_activity', to='sustainapp.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('report_type', models.CharField(blank=True, max_length=256, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('year', models.PositiveIntegerField(blank=True, null=True)),
                ('last_report', models.DateTimeField(auto_now_add=True)),
                ('report_by', models.CharField(blank=True, max_length=256, null=True)),
                ('org_logo', models.ImageField(blank=True, null=True, upload_to=sustainapp.models.get_upload_path)),
                ('about_the_organization', models.TextField(blank=True, null=True)),
                ('roles_and_responsibilities', models.TextField(blank=True, null=True)),
                ('organizational_boundries', models.TextField(blank=True, null=True)),
                ('excluded_sources', models.TextField(blank=True, null=True)),
                ('designation_of_organizational_admin', models.TextField(blank=True, null=True)),
                ('reporting_period_name', models.CharField(blank=True, max_length=255, null=True)),
                ('from_year', models.DateField(blank=True, max_length=255, null=True)),
                ('to_year', models.DateField(blank=True, max_length=255, null=True)),
                ('data_source', models.JSONField(blank=True, null=True)),
                ('calender_year', models.DateField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Deactivate'), (1, 'Activate')])),
                ('investment_corporates', models.JSONField(blank=True, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='client_reports', to='authentication.client')),
                ('corporate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_corporate', to='sustainapp.corporateentity')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='report_organization', to='sustainapp.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RowDataBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.PositiveIntegerField(blank=True, null=True)),
                ('row_number', models.PositiveIntegerField()),
                ('sector', models.CharField(blank=True, max_length=1024, null=True)),
                ('category', models.CharField(blank=True, max_length=1024, null=True)),
                ('value1', models.DecimalField(decimal_places=50, default=0.0, max_digits=100)),
                ('unit_type', models.CharField(blank=True, max_length=256, null=True)),
                ('unit1', models.CharField(blank=True, max_length=256, null=True)),
                ('value2', models.DecimalField(blank=True, decimal_places=50, default=0.0, max_digits=100, null=True)),
                ('unit2', models.CharField(blank=True, max_length=256, null=True)),
                ('file', models.TextField(blank=True, null=True)),
                ('filename', models.CharField(blank=True, max_length=256, null=True)),
                ('assign_to', models.CharField(blank=True, max_length=256, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('file_modified_at', models.CharField(blank=True, max_length=256, null=True)),
                ('emmissionfactorid', models.CharField(blank=True, max_length=1000, null=True)),
                ('activity_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('co2e', models.DecimalField(blank=True, decimal_places=50, max_digits=100, null=True)),
                ('co2e_unit', models.CharField(blank=True, max_length=256, null=True)),
                ('co2e_calculation_method', models.CharField(blank=True, max_length=256, null=True)),
                ('co2e_calculation_origin', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('activity_id', models.CharField(blank=True, max_length=512, null=True)),
                ('uuid', models.UUIDField(blank=True, null=True)),
                ('access_type', models.CharField(blank=True, max_length=100, null=True)),
                ('source', models.CharField(blank=True, max_length=100, null=True)),
                ('source_dataset', models.CharField(blank=True, max_length=256, null=True)),
                ('year', models.CharField(blank=True, max_length=256, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('source_lca_activity', models.CharField(blank=True, max_length=256, null=True)),
                ('data_quality_flags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=256, null=True), blank=True, null=True, size=None)),
                ('constituent_gases', models.JSONField(blank=True, null=True)),
                ('audit_trail', models.CharField(blank=True, max_length=256, null=True)),
                ('activity_data', models.JSONField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rowdatabatch_batch', to='sustainapp.batch')),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='RowDataBatchclient', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categorysector', to='sustainapp.sector')),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholdergroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('type', models.CharField(choices=[('Internal', 'Internal'), ('External', 'External')], max_length=256)),
                ('data', models.JSONField(blank=True, null=True)),
                ('content_type', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('object_id', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Stakeholdergroupclient', to='authentication.client')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organization_stakeholdergroup', to='sustainapp.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=256)),
                ('phone_number', models.PositiveIntegerField(blank=True, null=True)),
                ('data', models.JSONField(null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Stakeholderclient', to='authentication.client')),
                ('stakeholdergroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stakeholder', to='sustainapp.stakeholdergroup')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('assigned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_by', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_to', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='Taskclient', to='authentication.client')),
                ('row_data_batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='task_rowdatabatch', to='sustainapp.rowdatabatch')),
            ],
        ),
        migrations.CreateModel(
            name='TaskDashboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskname', models.CharField(max_length=1024)),
                ('deadline', models.DateField(help_text='Enter only future dates')),
                ('completed', models.BooleanField(default=False)),
                ('assigned_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Task_User', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(blank=True, default=authentication.models.Client.get_default_client, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='TaskDashboard_client', to='authentication.client')),
            ],
        ),
        migrations.CreateModel(
            name='User_client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='client_userclient', to='authentication.client')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_userclient', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Userorg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=256, null=True)),
                ('designation', models.CharField(blank=True, max_length=256, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='images/userorg')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('client', models.ForeignKey(default=authentication.models.Client.get_default_client, on_delete=django.db.models.deletion.CASCADE, related_name='client_User_Org', to='authentication.client')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userorg_group', to='auth.group')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userorg_organization', to='sustainapp.organization')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userorg_user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ZohoInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('iframe_url', models.URLField(max_length=2000)),
                ('table_no', models.CharField(max_length=30, validators=[sustainapp.Validators.IsPositiveInteger.validate_positive_integer])),
                ('table_name', models.CharField(max_length=255, unique=True)),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='zoho_info', to='authentication.client')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddConstraint(
            model_name='location',
            constraint=models.UniqueConstraint(fields=('corporateentity', 'name'), name='unique_corporate_corporateentity'),
        ),
        migrations.AddConstraint(
            model_name='batch',
            constraint=models.UniqueConstraint(fields=('location', 'year', 'month'), name='unique_batch'),
        ),
        migrations.AddConstraint(
            model_name='corporateentity',
            constraint=models.UniqueConstraint(fields=('organization', 'name'), name='unique_organization_corporate'),
        ),
        migrations.AddConstraint(
            model_name='organization',
            constraint=models.UniqueConstraint(fields=('client', 'name'), name='unique_client_organization'),
        ),
    ]
