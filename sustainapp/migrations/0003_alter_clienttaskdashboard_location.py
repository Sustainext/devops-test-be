# Generated by Django 4.2.4 on 2024-10-21 06:07

from django.db import migrations, models
import django.db.models.deletion


def forwards_func(apps, schema_editor):
    ClientTaskDashboard = apps.get_model("sustainapp", "ClientTaskDashboard")
    Location = apps.get_model("sustainapp", "Location")
    for obj in ClientTaskDashboard.objects.all():
        try:
            location = Location.objects.get(name=obj.location)
            obj.location = location
            obj.save()
        except Location.DoesNotExist:
            # Handle cases where the location does not exist
            # You might want to create a new Location or set obj.location to None
            obj.location = None
            obj.save()


def backwards_func(apps, schema_editor):
    ClientTaskDashboard = apps.get_model("sustainapp", "ClientTaskDashboard")
    for obj in ClientTaskDashboard.objects.all():
        if obj.location:
            obj.location = obj.location.name
            obj.save()


class Migration(migrations.Migration):

    dependencies = [
        (
            "sustainapp",
            "0002_remove_userorg_organization_userorg_organization",
        ),
    ]

    operations = [
        migrations.RunPython(forwards_func, backwards_func),
        migrations.AlterField(
            model_name="clienttaskdashboard",
            name="location",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="sustainapp.location",
            ),
        ),
    ]
