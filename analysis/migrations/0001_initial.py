# Generated by Django 4.2.4 on 2024-10-18 08:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChangeInWaterStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('unit', models.CharField(max_length=100)),
                ('total_water_storage_at_end', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('total_water_storage_at_beginning', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('change_in_water_storage', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CommunityDevelopmentNumberOfOperation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('name_of_operation', models.CharField(choices=[('Social impact assessments', 'social_impact_assessments'), ('Environmental impact assessments', 'environmental_impact_assessments'), ('Public disclosure', 'public_disclosure'), ('Community development programs', 'community_development_programs'), ('Stakeholder engagement plans', 'stakeholder_engagement_plans'), ('Local community consultation committes', 'local_community_consultation_committes'), ('Works councils, occupational health and safety committees', 'works_councils,_occupational_health_and_safety_committees'), ('Community grievance processes', 'community_grievance_processes')], max_length=500)),
                ('local_community_operations_count', models.PositiveIntegerField(help_text='Number of operations implemented by engaging local communities')),
                ('total_operations_count', models.PositiveIntegerField(help_text='Total number of operations')),
                ('index', models.PositiveIntegerField(default=0, help_text='Index of the operation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConsumedEnergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('source', models.CharField(blank=True, max_length=64, null=True)),
                ('purpose', models.CharField(blank=True, max_length=256, null=True)),
                ('renewability', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DirectPurchasedEnergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('source', models.CharField(blank=True, max_length=64, null=True)),
                ('purpose', models.CharField(blank=True, max_length=256, null=True)),
                ('renewability', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeeWorkerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('category', models.CharField(choices=[('covered_by_system', 'Covered by the system'), ('internally_audited', 'Internally audited'), ('externally_audited', 'Audited or certified by an external party')], max_length=255)),
                ('number_of_employees', models.IntegerField()),
                ('number_of_workers_not_employees', models.IntegerField()),
                ('total_number_of_employees', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'Employee and Worker Data',
            },
        ),
        migrations.CreateModel(
            name='EmploymentHires',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('age_group', models.CharField(choices=[('less than 30 years old', 'Less than 30 years old'), ('30-50 years old', '30-50 years old'), ('greater than 50 years old', 'Greater than 50 years old')], max_length=255)),
                ('employment_type', models.CharField(choices=[('permanent employee', 'Permanent Employee'), ('temporary employee', 'Temporary Employee'), ('non-guaranteed-employee', 'Non-guaranteed Employee'), ('full-time employee', 'Full-time Employee'), ('part-time employee', 'Part-time Employee')], max_length=255)),
                ('employmee_table_name', models.CharField(choices=[('new employee hire', 'New Employee Hire'), ('employee turnover', 'Employee Turnover')], max_length=255)),
                ('value', models.IntegerField()),
                ('index', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EmploymentTurnover',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('age_group', models.CharField(choices=[('less than 30 years old', 'Less than 30 years old'), ('30-50 years old', '30-50 years old'), ('greater than 50 years old', 'Greater than 50 years old')], max_length=255)),
                ('employment_type', models.CharField(choices=[('permanent employee', 'Permanent Employee'), ('temporary employee', 'Temporary Employee'), ('non-guaranteed-employee', 'Non-guaranteed Employee'), ('full-time employee', 'Full-time Employee'), ('part-time employee', 'Part-time Employee')], max_length=255)),
                ('employmee_table_name', models.CharField(choices=[('new employee hire', 'New Employee Hire'), ('employee turnover', 'Employee Turnover')], max_length=255)),
                ('employee_turnover_beginning', models.IntegerField()),
                ('employee_turnover_ending', models.IntegerField()),
                ('value', models.IntegerField()),
                ('index', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnergyConsumedOutsideOrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('purpose', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnergyIntensity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('energy_quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('energy_unit', models.CharField(blank=True, max_length=1024, null=True)),
                ('org_metric', models.CharField(blank=True, max_length=64, null=True)),
                ('metric_quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=20, null=True)),
                ('metric_unit', models.CharField(blank=True, max_length=32, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EnergySold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('source', models.CharField(blank=True, max_length=64, null=True)),
                ('type_of_entity', models.CharField(blank=True, max_length=64, null=True)),
                ('name_of_entity', models.CharField(blank=True, max_length=128, null=True)),
                ('renewability', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gender', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernanceBodyDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('table_name', models.CharField(help_text='Table Name', max_length=500)),
                ('employee_category', models.CharField(help_text='Basic Salary per Employee Category', max_length=500)),
                ('gender_count', models.PositiveIntegerField(help_text='Number of gender employees in minority groups')),
                ('location_of_operation', models.CharField(help_text='Location of operation', max_length=500)),
                ('index', models.PositiveIntegerField(help_text='Index of the data')),
            ],
            options={
                'verbose_name_plural': 'Governance Body Details',
            },
        ),
        migrations.CreateModel(
            name='IllHealthReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('table_name', models.CharField(choices=[('employees', 'Employees'), ('non_employees', 'Non-Employees (Controlled by Organization)')], max_length=200)),
                ('employee_category', models.CharField(choices=[('employees', 'Employees'), ('non_employees', 'Non-Employees (Controlled by Organization)')], help_text='Indicate if the report is for employees or non-employees controlled by the organization.', max_length=500)),
                ('fatalities_due_to_ill_health', models.PositiveIntegerField(help_text='Number of fatalities as a result of work-related ill health')),
                ('recordable_ill_health_cases', models.PositiveIntegerField(help_text='Number of cases of recordable work-related ill health')),
                ('types_of_ill_health', models.TextField(help_text='Main types of work-related ill health')),
                ('index', models.PositiveIntegerField(help_text='Index of the report within the year')),
            ],
            options={
                'verbose_name_plural': 'Ill Health Reports',
            },
        ),
        migrations.CreateModel(
            name='InjuryReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('table_name', models.CharField(choices=[('the_number_of_injuries_for_all_employees', 'The number of injuries for all employees'), ('the_number_of_injuries_for_workers_who_are_not_employees_but_whose_work_and_workplace_is_controlled_by_the_organization', 'The Number of Injuries for workers who are not employees but whose work and workplace is controlled by the organization')], max_length=120)),
                ('employee_category', models.CharField(help_text='Indicate if the report is for employees or non-employees controlled by the organization.', max_length=500)),
                ('fatalities', models.PositiveIntegerField(help_text='Number of fatalities as a result of work-related injury')),
                ('high_consequence_injuries', models.PositiveIntegerField(help_text='Number of high-consequence work-related injuries (excluding fatalities)')),
                ('recordable_injuries', models.PositiveIntegerField(help_text='Number of recordable work-related injuries')),
                ('injury_types', models.TextField(help_text='Main types of work-related injury')),
                ('hours_worked', models.PositiveIntegerField(help_text='Number of hours worked')),
            ],
            options={
                'verbose_name_plural': 'Injury Reports',
            },
        ),
        migrations.CreateModel(
            name='OrganisationGovernanceBodies',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('employee_category', models.CharField(help_text='Category of employees within the governance body', max_length=500)),
                ('age_group', models.CharField(choices=[('less than 30 years old', 'Less than 30 years old'), ('30-50 years old', '30-50 years old'), ('greater than 50 years old', 'Greater than 50 years old')], max_length=255)),
                ('minority_group_count', models.PositiveIntegerField(help_text='Number of employees in minority groups')),
                ('vulnerable_communities_count', models.PositiveIntegerField(help_text='Number of employees from vulnerable communities')),
                ('gender_value', models.IntegerField()),
                ('age_group_value', models.IntegerField()),
                ('index', models.IntegerField()),
                ('table_name', models.CharField(max_length=500)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ParentalLeave',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('value', models.IntegerField()),
                ('employee_category', models.CharField(choices=[('parental_leave_entitlement', 'Parental Leave Entitlement'), ('taking_parental_leave', 'Taking parental leave'), ('returning_to_work_post-leave', 'Returning to Work Post-Leave'), ('retained_12_months_after_leave', 'Retained 12 Months After Leave')], max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReductionEnergyConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('type_of_intervention', models.CharField(blank=True, max_length=64, null=True)),
                ('energy_type_reduced', models.CharField(blank=True, max_length=64, null=True)),
                ('base_year', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_reduction', models.CharField(blank=True, max_length=32, null=True)),
                ('methodology_used', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReductionEnergyInProductServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('product', models.CharField(blank=True, max_length=128, null=True)),
                ('base_year', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SelfGeneratedEnergy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('year', models.PositiveIntegerField()),
                ('month', models.CharField(max_length=8)),
                ('quantiy_gj', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=12, null=True)),
                ('unit', models.CharField(blank=True, max_length=8, null=True)),
                ('index', models.PositiveIntegerField(blank=True, null=True)),
                ('energy_type', models.CharField(blank=True, max_length=64, null=True)),
                ('source', models.CharField(blank=True, max_length=64, null=True)),
                ('renewability', models.CharField(blank=True, max_length=64, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ThirdPartyWaterDischargeFromAllAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('third_party_discharge', models.CharField(max_length=100)),
                ('water_unit', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WasteDirectedToDisposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('waste_disposed', models.DecimalField(choices=[('g', 'grams'), ('Kgs', 'kilograms'), ('t (metric tons)', 'metric tons'), ('ton (US short ton)', 'US short ton'), ('lbs', 'pounds')], decimal_places=2, default='Kgs', max_digits=10)),
                ('method_of_disposal', models.CharField(max_length=500)),
                ('waste_unit', models.CharField(max_length=50)),
                ('waste_type', models.CharField(max_length=500)),
                ('index', models.PositiveIntegerField()),
                ('category', models.CharField(choices=[('hazardous', 'Hazardous'), ('non_hazardous', 'Non-hazardous')], max_length=200)),
                ('site', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WasteDivertedFromDisposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('waste_diverted', models.DecimalField(choices=[('g', 'grams'), ('Kgs', 'kilograms'), ('t (metric tons)', 'metric tons'), ('ton (US short ton)', 'US short ton'), ('lbs', 'pounds')], decimal_places=2, default='Kgs', max_digits=10)),
                ('recovery_option', models.CharField(choices=[('preparation_for_reuse', 'Preparation for reuse'), ('recyling', 'Recycling'), ('other', 'Other')], max_length=200)),
                ('waste_unit', models.CharField(max_length=50)),
                ('waste_type', models.CharField(max_length=500)),
                ('index', models.PositiveIntegerField()),
                ('category', models.CharField(choices=[('hazardous', 'Hazardous'), ('non_hazardous', 'Non-hazardous')], max_length=200)),
                ('site', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WasteGenerated',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('category', models.CharField(choices=[('hazardous', 'Hazardous'), ('non_hazardous', 'Non-hazardous')], max_length=200)),
                ('waste_generated', models.DecimalField(choices=[('g', 'grams'), ('Kgs', 'kilograms'), ('t (metric tons)', 'metric tons'), ('ton (US short ton)', 'US short ton'), ('lbs', 'pounds')], decimal_places=2, default='Kgs', max_digits=10)),
                ('waste_unit', models.CharField(max_length=50)),
                ('waste_type', models.CharField(max_length=500)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterDischargeFromStressAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('withdraw_from_third_party', models.CharField(max_length=100)),
                ('source', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=100)),
                ('quantity', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterFromAllAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('source', models.CharField(max_length=100)),
                ('water_type', models.CharField(max_length=100)),
                ('water_unit', models.CharField(max_length=100)),
                ('business_operation', models.CharField(max_length=100)),
                ('total_water_withdrawal', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('total_water_discharge', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WaterFromStressAreas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('month', models.IntegerField(null=True)),
                ('year', models.IntegerField()),
                ('source', models.CharField(max_length=100)),
                ('water_type', models.CharField(max_length=100)),
                ('water_unit', models.CharField(max_length=100)),
                ('business_operation', models.CharField(max_length=100)),
                ('name_of_water_stress_area', models.CharField(max_length=100)),
                ('pin_code', models.CharField(max_length=100)),
                ('total_water_withdrawal', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('total_water_discharge', models.DecimalField(choices=[('Litre', 'Litre'), ('Megalitre', 'Megalitre'), ('Cubic meter', 'Cubic meter'), ('Kilolitre', 'Kilolitre'), ('Million litres per day', 'Million litres per day')], decimal_places=6, default='Megalitre', max_digits=20)),
                ('index', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
