# Generated by Django 4.2.4 on 2024-11-06 05:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


# * Create a method that adds  a lock to all user account
def add_lock_to_all_users(apps, schema_editor):
    User = apps.get_model("authentication", "CustomUser")
    UserSafeLock = apps.get_model("authentication", "UserSafeLock")
    for user in User.objects.all():
        UserSafeLock.objects.create(user=user).save()


class Migration(migrations.Migration):

    dependencies = [
        ("authentication", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserSafeLock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_locked", models.BooleanField(default=False)),
                ("failed_login_attempts", models.IntegerField(default=0)),
                ("locked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="safelock",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.RunPython(add_lock_to_all_users),
    ]
